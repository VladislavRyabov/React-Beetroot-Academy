{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Beetroot_Academy/React/React-2/front/src/pages/rickAndMorty/RickAndMorty.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport useFetch from \"react-fetch-hook\";\nimport './rickAndMorty.scss';\nimport CartRick from \"../../component/Cart/Cart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RickAndMorty() {\n  _s();\n  const {\n    isLoading,\n    data\n  } = useFetch('https://rickandmortyapi.com/api/character?page=2');\n  console.log(data === null || data === void 0 ? void 0 : data.results);\n  let inpValue = /*#__PURE__*/React.createRef();\n  const [out, setOut] = useState('Vlad');\n  function changeState() {}\n\n  // let RickAndMorty = data?.results.map(item => <CartRick key={item.id} item={item}/>)\n\n  return isLoading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"...isLoading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 24\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"RickAndMorty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rick-search-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: inpValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: changeState,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-out\",\n        children: out\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(RickAndMorty, \"tQT7Uhg0h6d4pxRtbRwpbymHSAk=\", false, function () {\n  return [useFetch];\n});\n_c = RickAndMorty;\nexport default RickAndMorty;\nvar _c;\n$RefreshReg$(_c, \"RickAndMorty\");","map":{"version":3,"names":["React","useState","useFetch","CartRick","RickAndMorty","isLoading","data","console","log","results","inpValue","createRef","out","setOut","changeState"],"sources":["/Users/user/Documents/Beetroot_Academy/React/React-2/front/src/pages/rickAndMorty/RickAndMorty.jsx"],"sourcesContent":["import React, {useState} from \"react\";\n\nimport useFetch from \"react-fetch-hook\";\nimport './rickAndMorty.scss'\nimport CartRick from \"../../component/Cart/Cart\";\nfunction RickAndMorty() {\n    const {isLoading, data} = useFetch('https://rickandmortyapi.com/api/character?page=2')\n    console.log(data?.results)\n\n    let inpValue = React.createRef()\n    const [out, setOut] = useState('Vlad');\n    function changeState() {\n\n    }\n\n    // let RickAndMorty = data?.results.map(item => <CartRick key={item.id} item={item}/>)\n\n    return isLoading ? <h1>...isLoading</h1> : (\n        <>\n            <section>\n                <h2>RickAndMorty</h2>\n                <div className=\"rick-search-row\">\n                    <input type=\"text\" ref={inpValue}/><button onClick={changeState}>Search</button>\n                </div>\n                <div className=\"cards-out\">\n                    {/*{RickAndMorty}*/}\n                    {out}\n                </div>\n            </section>\n        </>\n    )\n}\nexport default RickAndMorty"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAErC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,qBAAqB;AAC5B,OAAOC,QAAQ,MAAM,2BAA2B;AAAC;AAAA;AACjD,SAASC,YAAY,GAAG;EAAA;EACpB,MAAM;IAACC,SAAS;IAAEC;EAAI,CAAC,GAAGJ,QAAQ,CAAC,kDAAkD,CAAC;EACtFK,OAAO,CAACC,GAAG,CAACF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,OAAO,CAAC;EAE1B,IAAIC,QAAQ,gBAAGV,KAAK,CAACW,SAAS,EAAE;EAChC,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,MAAM,CAAC;EACtC,SAASa,WAAW,GAAG,CAEvB;;EAEA;;EAEA,OAAOT,SAAS,gBAAG;IAAA,UAAI;EAAY;IAAA;IAAA;IAAA;EAAA,QAAK,gBACpC;IAAA,uBACI;MAAA,wBACI;QAAA,UAAI;MAAY;QAAA;QAAA;QAAA;MAAA,QAAK,eACrB;QAAK,SAAS,EAAC,iBAAiB;QAAA,wBAC5B;UAAO,IAAI,EAAC,MAAM;UAAC,GAAG,EAAEK;QAAS;UAAA;UAAA;UAAA;QAAA,QAAE;UAAQ,OAAO,EAAEI,WAAY;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QAC9E,eACN;QAAK,SAAS,EAAC,WAAW;QAAA,UAErBF;MAAG;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA;EACA,iBAEjB;AACL;AAAC,GA1BQR,YAAY;EAAA,QACSF,QAAQ;AAAA;AAAA,KAD7BE,YAAY;AA2BrB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}