{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Beetroot_Academy/React/React-2/front/src/pages/service/Service.jsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from '@apollo/client';\nimport { GET_POST } from '../../data/Posts';\nimport '../../component/Test/Test.scss';\nimport Test from \"../../component/Test/Test\";\nimport React, { useEffect, useState } from \"react\";\nimport CartRick from \"../../component/Cart/Cart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Service() {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_POST);\n  // const Posts = data?.posts.data.map(item => <Test key={item.id} item={item}/>)\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"...Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 23\n  }, this);\n  console.log(data === null || data === void 0 ? void 0 : data.posts.data);\n  const [out, setOut] = useState();\n  const [option, setOption] = useState([]);\n  useEffect(() => {\n    //species\n    let Option = [];\n    data === null || data === void 0 ? void 0 : data.posts.data.forEach(item => Option.push(item.species));\n    let newOption = new Set(Option);\n    setOption([...newOption]);\n    console.log(Option);\n    setOut(data === null || data === void 0 ? void 0 : data.posts.data);\n  }, [data === null || data === void 0 ? void 0 : data.posts.data]);\n  let inpValue = /*#__PURE__*/React.createRef();\n  function changeState(event) {\n    let newArr = [];\n    data === null || data === void 0 ? void 0 : data.posts.data.map(item => {\n      let lowItemName = item.name.toLowerCase();\n      let lowItemValue = inpValue.current.value.toLowerCase();\n      //\n      if (lowItemName.indexOf(lowItemValue) >= 0) {\n        newArr.push(item);\n      }\n      setOut(newArr);\n    });\n    console.log(inpValue.current.value);\n  }\n  function selectChange(event) {\n    let newOpRick = [];\n    data === null || data === void 0 ? void 0 : data.posts.data.map(item => {\n      // item.species === event.target.value && newOpRick.push(item)\n      if (item.species === event.target.value) {\n        newOpRick.push(item);\n        setOut(newOpRick);\n      } else if (item.species === 'All') {\n        setOut(data === null || data === void 0 ? void 0 : data.posts.data);\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"rick-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rick-select-row\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: selectChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), option.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 54\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rick-search-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: inpValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: changeState,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-ul\",\n      children: out === null || out === void 0 ? void 0 : out.map(item => /*#__PURE__*/_jsxDEV(Test, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 35\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(Service, \"mFXHo9tzBtZCkuNCIDZ0LTSBwuc=\", false, function () {\n  return [useQuery];\n});\n_c = Service;\nexport default Service;\nvar _c;\n$RefreshReg$(_c, \"Service\");","map":{"version":3,"names":["useQuery","GET_POST","Test","React","useEffect","useState","CartRick","Service","loading","error","data","message","console","log","posts","out","setOut","option","setOption","Option","forEach","item","push","species","newOption","Set","inpValue","createRef","changeState","event","newArr","map","lowItemName","name","toLowerCase","lowItemValue","current","value","indexOf","selectChange","newOpRick","target","index","id"],"sources":["/Users/user/Documents/Beetroot_Academy/React/React-2/front/src/pages/service/Service.jsx"],"sourcesContent":["import { useQuery } from '@apollo/client';\nimport { GET_POST } from '../../data/Posts'\nimport '../../component/Test/Test.scss'\nimport Test from \"../../component/Test/Test\";\nimport React, {useEffect, useState} from \"react\";\nimport CartRick from \"../../component/Cart/Cart\";\nfunction Service() {\n    const { loading, error, data } = useQuery(GET_POST);\n    // const Posts = data?.posts.data.map(item => <Test key={item.id} item={item}/>)\n\n    if (loading) return <h1>...Loading</h1>\n    if (error) return <h1>Error: {error.message}</h1>\n    console.log(data?.posts.data)\n\n\n    const [out, setOut] = useState();\n    const [option, setOption] = useState([]);\n\n    useEffect(() => {\n        //species\n        let Option = []\n        data?.posts.data.forEach(item => Option.push(item.species))\n\n        let newOption = new Set(Option)\n\n        setOption([...newOption])\n        console.log(Option)\n\n        setOut(data?.posts.data)\n    }, [data?.posts.data])\n\n    let inpValue = React.createRef()\n    function changeState(event) {\n        let newArr = []\n        data?.posts.data.map((item) => {\n            let lowItemName = item.name.toLowerCase();\n            let lowItemValue = inpValue.current.value.toLowerCase();\n            //\n            if(lowItemName.indexOf(lowItemValue) >= 0) {\n                newArr.push(item)\n            }\n            setOut(newArr)\n        })\n        console.log(inpValue.current.value)\n    }\n\n\n\n    function selectChange(event) {\n        let newOpRick = []\n        data?.posts.data.map(item => {\n            // item.species === event.target.value && newOpRick.push(item)\n            if (item.species === event.target.value) {\n                newOpRick.push(item)\n                setOut(newOpRick)\n            } else if (item.species === 'All') {\n                setOut(data?.posts.data)\n            }\n        })\n    }\n\n    return (\n        <div>\n            <nav className=\"rick-nav\">\n                <div className=\"rick-select-row\">\n                    <select onChange={selectChange}>\n                        <option value=\"All\">All</option>\n                        {option.map((item, index) => <option key={index}>{item}</option>)}\n                    </select>\n                </div>\n                <div className=\"rick-search-row\">\n                    <input type=\"text\" ref={inpValue}/><button onClick={changeState}>Search</button>\n                </div>\n            </nav>\n            <div className=\"cart-ul\">\n                {out?.map(item => <Test key={item.id} item={item}/>)}\n            </div>\n        </div>\n    )\n}\nexport default Service"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}