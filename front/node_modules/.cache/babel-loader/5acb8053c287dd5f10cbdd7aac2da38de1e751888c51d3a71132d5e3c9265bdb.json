{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom/client';import{ApolloClient,InMemoryCache,ApolloProvider}from'@apollo/client';import{BrowserRouter}from'react-router-dom';import App from'./App';import{jsx as _jsx}from\"react/jsx-runtime\";var client=new ApolloClient({uri:'http://localhost:1337/graphql',cache:new InMemoryCache()});var root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(ApolloProvider,{client:client,children:/*#__PURE__*/_jsx(App,{})})})}));","map":{"version":3,"names":["React","ReactDOM","ApolloClient","InMemoryCache","ApolloProvider","BrowserRouter","App","client","uri","cache","root","createRoot","document","getElementById","render"],"sources":["/Users/user/Documents/Beetroot_Academy/React/React-2/front/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport App from './App'\n\nconst client = new ApolloClient({\n    uri: 'http://localhost:1337/graphql',\n    cache: new InMemoryCache(),\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <ApolloProvider client={client}>\n                <App/>\n            </ApolloProvider>\n        </React.StrictMode>\n    </BrowserRouter>\n);\n"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,SAAQ,KAAM,kBAAkB,CACvC,OAASC,YAAY,CAAEC,aAAa,CAAEC,cAAc,KAAQ,gBAAgB,CAC5E,OAAQC,aAAa,KAAO,kBAAkB,CAE9C,MAAOC,IAAG,KAAM,OAAO,4CAEvB,GAAMC,OAAM,CAAG,GAAIL,aAAY,CAAC,CAC5BM,GAAG,CAAE,+BAA+B,CACpCC,KAAK,CAAE,GAAIN,cAAa,EAC5B,CAAC,CAAC,CAEF,GAAMO,KAAI,CAAGT,QAAQ,CAACU,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAEjEH,IAAI,CAACI,MAAM,cACP,KAAC,aAAa,wBACV,KAAC,KAAK,CAAC,UAAU,wBACb,KAAC,cAAc,EAAC,MAAM,CAAEP,MAAO,uBAC3B,KAAC,GAAG,IAAE,EACO,EACF,EACP,CACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}