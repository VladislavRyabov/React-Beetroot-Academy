{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Beetroot_Academy/React/React-2/front/src/pages/service/Service.jsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from '@apollo/client';\nimport { GET_POST } from '../../data/Posts';\nimport React, { useEffect, useState } from \"react\";\nimport Test from \"../../component/Test/Test\";\nimport '../../component/Test/Test.scss';\nimport './service.scss';\nimport background from '../../img/section4.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Service() {\n  _s();\n  // const {isLoading, data} = useFetch('http://localhost:1337/graphql')\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_POST);\n  const Posts = data === null || data === void 0 ? void 0 : data.posts.data;\n  const [out, setOut] = useState();\n  const [option, setOption] = useState([]);\n  const [color, setColor] = useState([]);\n  useEffect(() => {\n    let Option = [];\n    data === null || data === void 0 ? void 0 : data.posts.data.forEach(item => Option.push(item.attributes.category));\n    let newOption = new Set(Option);\n    setOption([...newOption]);\n    setOut(data === null || data === void 0 ? void 0 : data.posts.data);\n  }, [data === null || data === void 0 ? void 0 : data.posts.data]);\n  useEffect(() => {\n    let Color = [];\n    data === null || data === void 0 ? void 0 : data.posts.data.forEach(item => Color.push(item.attributes.color));\n    let newColor = new Set(Color);\n    setColor([...newColor]);\n  }, [data === null || data === void 0 ? void 0 : data.posts.data]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"...Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 23\n  }, this);\n  console.log(data === null || data === void 0 ? void 0 : data.posts.data);\n  let inpValue = /*#__PURE__*/React.createRef();\n  function changeState(event) {\n    let newArr = [];\n    data === null || data === void 0 ? void 0 : data.posts.data.map(item => {\n      let lowItemName = item.attributes.title.toLowerCase();\n      let lowItemValue = inpValue.current.value.toLowerCase();\n      //\n      if (lowItemName.indexOf(lowItemValue) >= 0) {\n        newArr.push(item);\n      }\n      setOut(newArr);\n    });\n  }\n  function selectChange(event) {\n    let newOpRick = [];\n    data === null || data === void 0 ? void 0 : data.posts.data.map(item => {\n      if (item.attributes.category === event.target.value) {\n        newOpRick.push(item);\n        setOut(newOpRick);\n      } else if (item.attributes.category === 'All') {\n        setOut(data === null || data === void 0 ? void 0 : data.posts.data);\n      }\n    });\n  }\n  function vladislav(event) {\n    let newOpRick = [];\n    data === null || data === void 0 ? void 0 : data.posts.data.map(item => {\n      if (item.attributes.color === event.target.value) {\n        newOpRick.push(item);\n        setOut(newOpRick);\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"products\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"products__box container\",\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"products__background\",\n        src: background,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"rick-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rick-select-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: selectChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"All\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), option.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 58\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: vladislav,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"All\",\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), color.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 57\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rick-search-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ref: inpValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: changeState,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-ul\",\n        children: out === null || out === void 0 ? void 0 : out.map(item => /*#__PURE__*/_jsxDEV(Test, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 39\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Service, \"RV1+tb3B/YRBdg3nmr24CRhfNy8=\", false, function () {\n  return [useQuery];\n});\n_c = Service;\nexport default Service;\nvar _c;\n$RefreshReg$(_c, \"Service\");","map":{"version":3,"names":["useQuery","GET_POST","React","useEffect","useState","Test","background","Service","loading","error","data","Posts","posts","out","setOut","option","setOption","color","setColor","Option","forEach","item","push","attributes","category","newOption","Set","Color","newColor","message","console","log","inpValue","createRef","changeState","event","newArr","map","lowItemName","title","toLowerCase","lowItemValue","current","value","indexOf","selectChange","newOpRick","target","vladislav","index","id"],"sources":["/Users/user/Documents/Beetroot_Academy/React/React-2/front/src/pages/service/Service.jsx"],"sourcesContent":["import { useQuery } from '@apollo/client';\nimport { GET_POST } from '../../data/Posts'\nimport React, {useEffect, useState} from \"react\";\nimport Test from \"../../component/Test/Test\";\nimport '../../component/Test/Test.scss'\nimport './service.scss'\n\nimport background from '../../img/section4.png'\n\nfunction Service() {\n    // const {isLoading, data} = useFetch('http://localhost:1337/graphql')\n    const { loading, error, data } = useQuery(GET_POST);\n    const Posts = data?.posts.data;\n\n    const [out, setOut] = useState();\n    const [option, setOption] = useState([]);\n    const [color, setColor] = useState([]);\n\n    useEffect(() => {\n        let Option = [];\n        data?.posts.data.forEach(item => Option.push(item.attributes.category));\n        let newOption = new Set(Option);\n        setOption([...newOption]);\n\n        setOut(data?.posts.data);\n    }, [data?.posts.data]);\n\n    useEffect(() => {\n        let Color = [];\n        data?.posts.data.forEach(item => Color.push(item.attributes.color));\n        let newColor = new Set(Color);\n        setColor([...newColor]);\n\n    }, [data?.posts.data]);\n\n    if (loading) return <h1>...Loading</h1>\n    if (error) return <h1>Error: {error.message}</h1>\n    console.log(data?.posts.data);\n\n    let inpValue = React.createRef();\n    function changeState(event) {\n        let newArr = [];\n        data?.posts.data.map((item) => {\n            let lowItemName = item.attributes.title.toLowerCase();\n            let lowItemValue = inpValue.current.value.toLowerCase();\n            //\n            if(lowItemName.indexOf(lowItemValue) >= 0) {\n                newArr.push(item);\n            }\n            setOut(newArr);\n        })\n    }\n\n    function selectChange(event) {\n        let newOpRick = [];\n        data?.posts.data.map(item => {\n            if (item.attributes.category === event.target.value) {\n                newOpRick.push(item)\n                setOut(newOpRick)\n            } else if (item.attributes.category === 'All') {\n                setOut(data?.posts.data)\n            }\n        })\n    }\n\n    function vladislav(event) {\n        let newOpRick = [];\n        data?.posts.data.map(item => {\n            if (item.attributes.color === event.target.value) {\n                newOpRick.push(item)\n                setOut(newOpRick)\n            }\n        })\n    }\n\n    return (\n        <>\n            <section className=\"products\">\n                <div className=\"products__box container\">>\n\n                </div>\n                <img className=\"products__background\" src={background} alt=\"\"/>\n            </section>\n            <section className=\"container\">\n                <nav className=\"rick-nav\">\n                    <div className=\"rick-select-row\">\n                        <select onChange={selectChange}>\n                            <option value=\"All\">Category</option>\n                            {option.map((item, index) => <option key={index}>{item}</option>)}\n                        </select>\n                        <select onChange={vladislav}>\n                            <option value=\"All\">Color</option>\n                            {color.map((item, index) => <option key={index}>{item}</option>)}\n                        </select>\n                    </div>\n                    <div className=\"rick-search-row\">\n                        <input type=\"text\" ref={inpValue}/><button onClick={changeState}>Search</button>\n                    </div>\n                </nav>\n                <div className=\"cart-ul\">\n                    {out?.map(item => <Test key={item.id} item={item}/>)}\n                </div>\n            </section>\n        </>\n    )\n}\nexport default Service"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,IAAI,MAAM,2BAA2B;AAC5C,OAAO,gCAAgC;AACvC,OAAO,gBAAgB;AAEvB,OAAOC,UAAU,MAAM,wBAAwB;AAAA;AAAA;AAE/C,SAASC,OAAO,GAAG;EAAA;EACf;EACA,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGV,QAAQ,CAACC,QAAQ,CAAC;EACnD,MAAMU,KAAK,GAAGD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,KAAK,CAACF,IAAI;EAE9B,MAAM,CAACG,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,EAAE;EAChC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,IAAIgB,MAAM,GAAG,EAAE;IACfT,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,KAAK,CAACF,IAAI,CAACU,OAAO,CAACC,IAAI,IAAIF,MAAM,CAACG,IAAI,CAACD,IAAI,CAACE,UAAU,CAACC,QAAQ,CAAC,CAAC;IACvE,IAAIC,SAAS,GAAG,IAAIC,GAAG,CAACP,MAAM,CAAC;IAC/BH,SAAS,CAAC,CAAC,GAAGS,SAAS,CAAC,CAAC;IAEzBX,MAAM,CAACJ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,KAAK,CAACF,IAAI,CAAC;EAC5B,CAAC,EAAE,CAACA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,KAAK,CAACF,IAAI,CAAC,CAAC;EAEtBP,SAAS,CAAC,MAAM;IACZ,IAAIwB,KAAK,GAAG,EAAE;IACdjB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,KAAK,CAACF,IAAI,CAACU,OAAO,CAACC,IAAI,IAAIM,KAAK,CAACL,IAAI,CAACD,IAAI,CAACE,UAAU,CAACN,KAAK,CAAC,CAAC;IACnE,IAAIW,QAAQ,GAAG,IAAIF,GAAG,CAACC,KAAK,CAAC;IAC7BT,QAAQ,CAAC,CAAC,GAAGU,QAAQ,CAAC,CAAC;EAE3B,CAAC,EAAE,CAAClB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,KAAK,CAACF,IAAI,CAAC,CAAC;EAEtB,IAAIF,OAAO,EAAE,oBAAO;IAAA,UAAI;EAAU;IAAA;IAAA;IAAA;EAAA,QAAK;EACvC,IAAIC,KAAK,EAAE,oBAAO;IAAA,WAAI,SAAO,EAACA,KAAK,CAACoB,OAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAAM;EACjDC,OAAO,CAACC,GAAG,CAACrB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,KAAK,CAACF,IAAI,CAAC;EAE7B,IAAIsB,QAAQ,gBAAG9B,KAAK,CAAC+B,SAAS,EAAE;EAChC,SAASC,WAAW,CAACC,KAAK,EAAE;IACxB,IAAIC,MAAM,GAAG,EAAE;IACf1B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,KAAK,CAACF,IAAI,CAAC2B,GAAG,CAAEhB,IAAI,IAAK;MAC3B,IAAIiB,WAAW,GAAGjB,IAAI,CAACE,UAAU,CAACgB,KAAK,CAACC,WAAW,EAAE;MACrD,IAAIC,YAAY,GAAGT,QAAQ,CAACU,OAAO,CAACC,KAAK,CAACH,WAAW,EAAE;MACvD;MACA,IAAGF,WAAW,CAACM,OAAO,CAACH,YAAY,CAAC,IAAI,CAAC,EAAE;QACvCL,MAAM,CAACd,IAAI,CAACD,IAAI,CAAC;MACrB;MACAP,MAAM,CAACsB,MAAM,CAAC;IAClB,CAAC,CAAC;EACN;EAEA,SAASS,YAAY,CAACV,KAAK,EAAE;IACzB,IAAIW,SAAS,GAAG,EAAE;IAClBpC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,KAAK,CAACF,IAAI,CAAC2B,GAAG,CAAChB,IAAI,IAAI;MACzB,IAAIA,IAAI,CAACE,UAAU,CAACC,QAAQ,KAAKW,KAAK,CAACY,MAAM,CAACJ,KAAK,EAAE;QACjDG,SAAS,CAACxB,IAAI,CAACD,IAAI,CAAC;QACpBP,MAAM,CAACgC,SAAS,CAAC;MACrB,CAAC,MAAM,IAAIzB,IAAI,CAACE,UAAU,CAACC,QAAQ,KAAK,KAAK,EAAE;QAC3CV,MAAM,CAACJ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,KAAK,CAACF,IAAI,CAAC;MAC5B;IACJ,CAAC,CAAC;EACN;EAEA,SAASsC,SAAS,CAACb,KAAK,EAAE;IACtB,IAAIW,SAAS,GAAG,EAAE;IAClBpC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,KAAK,CAACF,IAAI,CAAC2B,GAAG,CAAChB,IAAI,IAAI;MACzB,IAAIA,IAAI,CAACE,UAAU,CAACN,KAAK,KAAKkB,KAAK,CAACY,MAAM,CAACJ,KAAK,EAAE;QAC9CG,SAAS,CAACxB,IAAI,CAACD,IAAI,CAAC;QACpBP,MAAM,CAACgC,SAAS,CAAC;MACrB;IACJ,CAAC,CAAC;EACN;EAEA,oBACI;IAAA,wBACI;MAAS,SAAS,EAAC,UAAU;MAAA,wBACzB;QAAK,SAAS,EAAC,yBAAyB;QAAA,UAAC;MAEzC;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAK,SAAS,EAAC,sBAAsB;QAAC,GAAG,EAAExC,UAAW;QAAC,GAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACzD,eACV;MAAS,SAAS,EAAC,WAAW;MAAA,wBAC1B;QAAK,SAAS,EAAC,UAAU;QAAA,wBACrB;UAAK,SAAS,EAAC,iBAAiB;UAAA,wBAC5B;YAAQ,QAAQ,EAAEuC,YAAa;YAAA,wBAC3B;cAAQ,KAAK,EAAC,KAAK;cAAA,UAAC;YAAQ;cAAA;cAAA;cAAA;YAAA,QAAS,EACpC9B,MAAM,CAACsB,GAAG,CAAC,CAAChB,IAAI,EAAE4B,KAAK,kBAAK;cAAA,UAAqB5B;YAAI,GAAZ4B,KAAK;cAAA;cAAA;cAAA;YAAA,QAAiB,CAAC;UAAA;YAAA;YAAA;YAAA;UAAA,QAC5D,eACT;YAAQ,QAAQ,EAAED,SAAU;YAAA,wBACxB;cAAQ,KAAK,EAAC,KAAK;cAAA,UAAC;YAAK;cAAA;cAAA;cAAA;YAAA,QAAS,EACjC/B,KAAK,CAACoB,GAAG,CAAC,CAAChB,IAAI,EAAE4B,KAAK,kBAAK;cAAA,UAAqB5B;YAAI,GAAZ4B,KAAK;cAAA;cAAA;cAAA;YAAA,QAAiB,CAAC;UAAA;YAAA;YAAA;YAAA;UAAA,QAC3D;QAAA;UAAA;UAAA;UAAA;QAAA,QACP,eACN;UAAK,SAAS,EAAC,iBAAiB;UAAA,wBAC5B;YAAO,IAAI,EAAC,MAAM;YAAC,GAAG,EAAEjB;UAAS;YAAA;YAAA;YAAA;UAAA,QAAE;YAAQ,OAAO,EAAEE,WAAY;YAAA,UAAC;UAAM;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QAC9E;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ,eACN;QAAK,SAAS,EAAC,SAAS;QAAA,UACnBrB,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEwB,GAAG,CAAChB,IAAI,iBAAI,QAAC,IAAI;UAAe,IAAI,EAAEA;QAAK,GAApBA,IAAI,CAAC6B,EAAE;UAAA;UAAA;UAAA;QAAA,QAAe;MAAC;QAAA;QAAA;QAAA;MAAA,QAClD;IAAA;MAAA;MAAA;MAAA;IAAA,QACA;EAAA,gBACX;AAEX;AAAC,GAhGQ3C,OAAO;EAAA,QAEqBP,QAAQ;AAAA;AAAA,KAFpCO,OAAO;AAiGhB,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}