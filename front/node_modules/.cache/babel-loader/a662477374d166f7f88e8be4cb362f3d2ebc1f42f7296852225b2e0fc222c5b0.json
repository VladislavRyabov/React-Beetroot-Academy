{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Beetroot_Academy/React/React-2/front/src/pages/service/Service.jsx\",\n  _s = $RefreshSig$();\nimport Button from \"../../component/Button/Button\";\nimport cerImg from \"../../img/Parts_Explosion.png\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GET_LOCATIONS = gql`\n  query GetLocations {\n     posts {\n        data {\n          id\n          attributes {\n            Title\n            description\n            onOff\n            category\n            img {\n              data {\n                attributes {\n                  url\n                }\n              }\n            }\n          }\n        }\n      }\n  }\n`;\nfunction Service() {\n  _s();\n  const {\n    data\n  } = useQuery(GET_LOCATIONS);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My first Apollo app \\uD83D\\uDE80\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Service, \"JtionF1PqWN50DPWu724eJIU2SM=\", false, function () {\n  return [useQuery];\n});\n_c = Service;\nexport default Service;\nvar _c;\n$RefreshReg$(_c, \"Service\");","map":{"version":3,"names":["Button","cerImg","Link","useQuery","gql","GET_LOCATIONS","Service","data","console","log"],"sources":["/Users/user/Documents/Beetroot_Academy/React/React-2/front/src/pages/service/Service.jsx"],"sourcesContent":["import Button from \"../../component/Button/Button\";\nimport cerImg from \"../../img/Parts_Explosion.png\";\nimport {Link} from \"react-router-dom\";\nimport { useQuery, gql } from '@apollo/client';\n\nconst GET_LOCATIONS = gql`\n  query GetLocations {\n     posts {\n        data {\n          id\n          attributes {\n            Title\n            description\n            onOff\n            category\n            img {\n              data {\n                attributes {\n                  url\n                }\n              }\n            }\n          }\n        }\n      }\n  }\n`;\nfunction Service() {\n    const { data } = useQuery(GET_LOCATIONS);\n    console.log(data)\n    return (\n        <>\n            <div>\n                <h2>My first Apollo app ðŸš€</h2>\n            </div>\n        </>\n    )\n}\nexport default Service"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,+BAA+B;AAClD,OAAOC,MAAM,MAAM,+BAA+B;AAClD,SAAQC,IAAI,QAAO,kBAAkB;AACrC,SAASC,QAAQ,EAAEC,GAAG,QAAQ,gBAAgB;AAAC;AAAA;AAE/C,MAAMC,aAAa,GAAGD,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,SAASE,OAAO,GAAG;EAAA;EACf,MAAM;IAAEC;EAAK,CAAC,GAAGJ,QAAQ,CAACE,aAAa,CAAC;EACxCG,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB,oBACI;IAAA,uBACI;MAAA,uBACI;QAAA,UAAI;MAAsB;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA;EAC7B,iBACP;AAEX;AAAC,GAVQD,OAAO;EAAA,QACKH,QAAQ;AAAA;AAAA,KADpBG,OAAO;AAWhB,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}